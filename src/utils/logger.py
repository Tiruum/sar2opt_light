import sys
import datetime
from colorama import init, Fore, Style
from tqdm import tqdm

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è colorama
init(autoreset=True)

class Logger:
    """
    –ü—Ä–æ—Å—Ç–æ–π –ª–æ–≥–≥–µ—Ä —Å —Ü–≤–µ—Ç–∞–º–∏ (Colorama) –∏ emoji-–ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏.
    –£—Ä–æ–≤–Ω–∏: debug, info, success, warning, error.
    –¶–≤–µ—Ç–∞ –ø—Ä–∏–±–ª–∏–∂–µ–Ω—ã –∫ Tailwind CSS (–æ—Å–Ω–æ–≤–Ω—ã–µ –æ—Ç—Ç–µ–Ω–∫–∏).
    """
    LEVELS = {
        'debug':   {'color': Fore.MAGENTA, 'emoji': 'üêû'},
        'info':    {'color': Fore.CYAN,    'emoji': '‚ÑπÔ∏è'},
        'success': {'color': Fore.GREEN,   'emoji': '‚úÖ'},
        'warning': {'color': Fore.YELLOW,  'emoji': '‚ö†Ô∏è'},
        'error':   {'color': Fore.RED,     'emoji': '‚ùå'},
    }

    def __init__(self, name: str = None, stream=sys.stdout):
        """
        name: –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –∏–º—è –ª–æ–≥–≥–µ—Ä–∞ (–±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –≤ —Å–∫–æ–±–∫–∞—Ö)
        stream: –∫—É–¥–∞ –ø–∏—Å–∞—Ç—å (stdout –∏–ª–∏ stderr)
        """
        self.name = name
        self.stream = stream

    def _log(self, level: str, message: str):
        now = datetime.datetime.now().strftime("%H:%M:%S %d-%m-%Y ")
        lvl = self.LEVELS.get(level, self.LEVELS['info'])
        parts = [
            Style.DIM + now,
            lvl['color'] + ' ' + lvl['emoji'] + ' ' + level.upper(),
        ]
        if self.name:
            parts.append(Style.BRIGHT + f"[{self.name}]")
        parts.append(Style.NORMAL + str(message))
        text = " ".join(parts) + Style.RESET_ALL
        print(text, file=self.stream)

    def debug(self, message: str):
        self._log('debug', message)

    def info(self, message: str):
        self._log('info', message)

    def success(self, message: str):
        self._log('success', message)

    def warning(self, message: str):
        self._log('warning', message)

    def error(self, message: str):
        self._log('error', message)


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
if __name__ == "__main__":
    logger = Logger(name="SAR2OPT")
    logger.debug("–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ª–∞–¥–∫—É —Å–µ—Ç–∏")
    logger.info("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞")
    logger.success("–ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±—É—á–µ–Ω–∞")
    logger.warning("LR —Å–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫, –≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞—Å—Ö–æ–¥–∏–º–æ—Å—Ç—å")
    logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —á–µ–∫–ø–æ–∏–Ω—Ç–∞")